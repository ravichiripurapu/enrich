package data.pipeline.components.filter;

import data.pipeline.api.components.AbstractComponent;
import data.pipeline.api.error.FlowException;

public class FilterComponent extends AbstractComponent {

    private static Class[] inputClasses={String.class};
    private static Class[] outputClasses={String.class};
    public Class[] getInputClasses() {return inputClasses;}
    public Class[] getOutputClasses() {return outputClasses;}

    public String getName() {return "FilterComponent";}


    @Override
    protected void executeComponent() throws FlowException {
        System.out.println("FilterComponent");
        System.out.println("input:"+this.getInputValue(0));
        System.out.println(this.getEnvironmentKey());
        System.out.println(this.getNodeConfiguration());
        this.setOutputValue(0,"generated by filter component");
        // DO SOMETHING
        System.out.println("input:"+this.getTotalInputPorts());
        System.out.println("output:"+this.getTotalOutputPorts());
        this.setOutputValue(0,getFilterValue());

        System.out.println("output:"+this.getOutputValue(0));
    }

    private String getFilterValue() {
        return "filter - " + this.getInputValue(0);
    }


}
